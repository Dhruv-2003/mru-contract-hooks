{
	"id": "415d032b1c6ce4a6acf728872754f5db",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"L2Inbox.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.23;\n\n/**\n * @title L2Inbox\n * This contract is a L2 inbox that stores the currentStateRootHash & is updated via the Hook through native Bridges\n * @notice The setStateRootHash function is not restricted currently to any specific sender , but ideally should be the L1-L2 messenger\n */\ncontract L2Inbox {\n    bytes32 public currentStateRoot;\n\n    /**\n     * Set State Root hash\n     * @dev called by the L1-L2 messenger\n     * @notice only Owner/Operator are authorised\n     * @param _newStateRoot current state root for the keystore\n     */\n    function setStateRootHash(\n        bytes32 _newStateRoot\n    ) public returns (bytes32 stateRoot) {\n        currentStateRoot = _newStateRoot;\n\n        return currentStateRoot;\n    }\n\n    // Returns the Current state root hash\n    function getCurrentStateRootHash() public view returns (bytes32) {\n        return currentStateRoot;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"L2Inbox.sol": {
				"L2Inbox": {
					"abi": [
						{
							"inputs": [],
							"name": "currentStateRoot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentStateRootHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_newStateRoot",
									"type": "bytes32"
								}
							],
							"name": "setStateRootHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "stateRoot",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"setStateRootHash(bytes32)": {
								"details": "called by the L1-L2 messenger",
								"params": {
									"_newStateRoot": "current state root for the keystore"
								}
							}
						},
						"title": "L2Inbox This contract is a L2 inbox that stores the currentStateRootHash & is updated via the Hook through native Bridges",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"L2Inbox.sol\":341:938  contract L2Inbox {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"L2Inbox.sol\":341:938  contract L2Inbox {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x171f7bf2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xac2eba98\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfdf04331\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"L2Inbox.sol\":601:782  function setStateRootHash(... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n        /* \"L2Inbox.sol\":680:697  bytes32 stateRoot */\n      0x00\n        /* \"L2Inbox.sol\":709:741  currentStateRoot = _newStateRoot */\n      dup2\n      swap1\n      sstore\n        /* \"L2Inbox.sol\":728:741  _newStateRoot */\n      swap1\n        /* \"L2Inbox.sol\":601:782  function setStateRootHash(... */\n      jump\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"L2Inbox.sol\":601:782  function setStateRootHash(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"L2Inbox.sol\":364:395  bytes32 public currentStateRoot */\n    tag_4:\n      tag_6\n      sload(0x00)\n      dup2\n      jump\n        /* \"L2Inbox.sol\":831:936  function getCurrentStateRootHash() public view returns (bytes32) {... */\n    tag_5:\n        /* \"L2Inbox.sol\":887:894  bytes32 */\n      0x00\n        /* \"L2Inbox.sol\":913:929  currentStateRoot */\n      sload\n        /* \"L2Inbox.sol\":831:936  function getCurrentStateRootHash() public view returns (bytes32) {... */\n      jump(tag_6)\n        /* \"#utility.yul\":14:194   */\n    tag_8:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_22\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_22:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d3b99fbfdbc1cc4b5d35ffe78bf7ecf4e926fb0173b802cfe5119f69c129991864736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060bb8061001c5f395ff3fe6080604052348015600e575f80fd5b5060043610603a575f3560e01c8063171f7bf214603e578063ac2eba98146062578063fdf04331146069575b5f80fd5b60506049366004606f565b5f81905590565b60405190815260200160405180910390f35b60505f5481565b5f546050565b5f60208284031215607e575f80fd5b503591905056fea2646970667358221220d3b99fbfdbc1cc4b5d35ffe78bf7ecf4e926fb0173b802cfe5119f69c129991864736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xBB DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x171F7BF2 EQ PUSH1 0x3E JUMPI DUP1 PUSH4 0xAC2EBA98 EQ PUSH1 0x62 JUMPI DUP1 PUSH4 0xFDF04331 EQ PUSH1 0x69 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x50 PUSH1 0x49 CALLDATASIZE PUSH1 0x4 PUSH1 0x6F JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x50 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x50 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xB9 SWAP16 0xBF 0xDB 0xC1 0xCC 0x4B 0x5D CALLDATALOAD SELFDESTRUCT 0xE7 DUP12 0xF7 0xEC DELEGATECALL 0xE9 0x26 0xFB ADD PUSH20 0xB802CFE5119F69C129991864736F6C6343000817 STOP CALLER ",
							"sourceMap": "341:597:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@currentStateRoot_4": {
									"entryPoint": null,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentStateRootHash_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setStateRootHash_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:378:1",
										"nodeType": "YulBlock",
										"src": "0:378:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:1",
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:33:1",
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nativeSrc": "165:23:1",
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "14:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nativeSrc": "300:76:1",
													"nodeType": "YulBlock",
													"src": "300:76:1",
													"statements": [
														{
															"nativeSrc": "310:26:1",
															"nodeType": "YulAssignment",
															"src": "310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "322:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "333:2:1",
																		"nodeType": "YulLiteral",
																		"src": "333:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "318:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:1"
																},
																"nativeSrc": "318:18:1",
																"nodeType": "YulFunctionCall",
																"src": "318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "310:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "352:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "363:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																},
																"nativeSrc": "345:25:1",
																"nodeType": "YulFunctionCall",
																"src": "345:25:1"
															},
															"nativeSrc": "345:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "345:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "199:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "269:9:1",
														"nodeType": "YulTypedName",
														"src": "269:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "291:4:1",
														"nodeType": "YulTypedName",
														"src": "291:4:1",
														"type": ""
													}
												],
												"src": "199:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060043610603a575f3560e01c8063171f7bf214603e578063ac2eba98146062578063fdf04331146069575b5f80fd5b60506049366004606f565b5f81905590565b60405190815260200160405180910390f35b60505f5481565b5f546050565b5f60208284031215607e575f80fd5b503591905056fea2646970667358221220d3b99fbfdbc1cc4b5d35ffe78bf7ecf4e926fb0173b802cfe5119f69c129991864736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x171F7BF2 EQ PUSH1 0x3E JUMPI DUP1 PUSH4 0xAC2EBA98 EQ PUSH1 0x62 JUMPI DUP1 PUSH4 0xFDF04331 EQ PUSH1 0x69 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x50 PUSH1 0x49 CALLDATASIZE PUSH1 0x4 PUSH1 0x6F JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x50 PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x50 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xB9 SWAP16 0xBF 0xDB 0xC1 0xCC 0x4B 0x5D CALLDATALOAD SELFDESTRUCT 0xE7 DUP12 0xF7 0xEC DELEGATECALL 0xE9 0x26 0xFB ADD PUSH20 0xB802CFE5119F69C129991864736F6C6343000817 STOP CALLER ",
							"sourceMap": "341:597:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;601:181;;;;;;:::i;:::-;680:17;709:32;;;728:13;601:181;;;;345:25:1;;;333:2;318:18;601:181:0;;;;;;;364:31;;;;;;831:105;887:7;913:16;831:105;;14:180:1;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "37400",
								"executionCost": "85",
								"totalCost": "37485"
							},
							"external": {
								"currentStateRoot()": "2281",
								"getCurrentStateRootHash()": "2300",
								"setStateRootHash(bytes32)": "22341"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 341,
									"end": 938,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 341,
									"end": 938,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 938,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 341,
									"end": 938,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 341,
									"end": 938,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 341,
									"end": 938,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 341,
									"end": 938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 341,
									"end": 938,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 341,
									"end": 938,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 938,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 341,
									"end": 938,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 341,
									"end": 938,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 341,
									"end": 938,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 341,
									"end": 938,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 341,
									"end": 938,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 938,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 341,
									"end": 938,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 938,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 938,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 341,
									"end": 938,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 938,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3b99fbfdbc1cc4b5d35ffe78bf7ecf4e926fb0173b802cfe5119f69c129991864736f6c63430008170033",
									".code": [
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "171F7BF2"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "AC2EBA98"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "FDF04331"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 938,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 601,
											"end": 782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 601,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 601,
											"end": 782,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 601,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 601,
											"end": 782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 709,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 741,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 728,
											"end": 741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 601,
											"end": 782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 601,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 782,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 364,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 364,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 364,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 395,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 831,
											"end": 936,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 831,
											"end": 936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 887,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 831,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 831,
											"end": 936,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"L2Inbox.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"currentStateRoot()": "ac2eba98",
							"getCurrentStateRootHash()": "fdf04331",
							"setStateRootHash(bytes32)": "171f7bf2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"currentStateRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentStateRootHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_newStateRoot\",\"type\":\"bytes32\"}],\"name\":\"setStateRootHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setStateRootHash(bytes32)\":{\"details\":\"called by the L1-L2 messenger\",\"params\":{\"_newStateRoot\":\"current state root for the keystore\"}}},\"title\":\"L2Inbox This contract is a L2 inbox that stores the currentStateRootHash & is updated via the Hook through native Bridges\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setStateRootHash(bytes32)\":{\"notice\":\"Set State Root hashonly Owner/Operator are authorised\"}},\"notice\":\"The setStateRootHash function is not restricted currently to any specific sender , but ideally should be the L1-L2 messenger\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"L2Inbox.sol\":\"L2Inbox\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"L2Inbox.sol\":{\"keccak256\":\"0x4e11c0fbb3e043418867a1b8958bb9cdbac8f123b695b52bf163977e020c210b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a2cf02e1c6b240435917998231a5ab46bb13ebf505155068b34f72612927be9f\",\"dweb:/ipfs/Qmd9g54z6LpmrLY4aAFtDp56uzkKZz2Qg43pGZVguGqMmF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "L2Inbox.sol:L2Inbox",
								"label": "currentStateRoot",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setStateRootHash(bytes32)": {
								"notice": "Set State Root hashonly Owner/Operator are authorised"
							}
						},
						"notice": "The setStateRootHash function is not restricted currently to any specific sender , but ideally should be the L1-L2 messenger",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"L2Inbox.sol": {
				"ast": {
					"absolutePath": "L2Inbox.sol",
					"exportedSymbols": {
						"L2Inbox": [
							28
						]
					},
					"id": 29,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "L2Inbox",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "62:278:0",
								"text": " @title L2Inbox\n This contract is a L2 inbox that stores the currentStateRootHash & is updated via the Hook through native Bridges\n @notice The setStateRootHash function is not restricted currently to any specific sender , but ideally should be the L1-L2 messenger"
							},
							"fullyImplemented": true,
							"id": 28,
							"linearizedBaseContracts": [
								28
							],
							"name": "L2Inbox",
							"nameLocation": "350:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ac2eba98",
									"id": 4,
									"mutability": "mutable",
									"name": "currentStateRoot",
									"nameLocation": "379:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 28,
									"src": "364:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "364:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "699:83:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "currentStateRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "709:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 13,
														"name": "_newStateRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "728:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "709:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "709:32:0"
											},
											{
												"expression": {
													"id": 16,
													"name": "currentStateRoot",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "759:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 11,
												"id": 17,
												"nodeType": "Return",
												"src": "752:23:0"
											}
										]
									},
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "402:194:0",
										"text": " Set State Root hash\n @dev called by the L1-L2 messenger\n @notice only Owner/Operator are authorised\n @param _newStateRoot current state root for the keystore"
									},
									"functionSelector": "171f7bf2",
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setStateRootHash",
									"nameLocation": "610:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_newStateRoot",
												"nameLocation": "644:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 6,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:37:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "stateRoot",
												"nameLocation": "688:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "680:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 9,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:19:0"
									},
									"scope": 28,
									"src": "601:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "896:40:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"name": "currentStateRoot",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "913:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 23,
												"id": 25,
												"nodeType": "Return",
												"src": "906:23:0"
											}
										]
									},
									"functionSelector": "fdf04331",
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentStateRootHash",
									"nameLocation": "840:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "863:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "887:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 21,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:9:0"
									},
									"scope": 28,
									"src": "831:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 29,
							"src": "341:597:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "36:903:0"
				},
				"id": 0
			}
		}
	}
}